@page "/addProduct"

@rendermode InteractiveServer

@inject IAddProductUseCase AddProductUseCase;
@inject NavigationManager NavigationManager;

<h3>Add Product Item</h3>
<br />

<EditForm Model="product" OnValidSubmit="Save">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">Product Name</label>
        <InputText id="name"
                   @bind-Value="product.Name"
                   class="form-control" />
        <ValidationMessage For="() => product.Name" />
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity"
                     @bind-Value="product.Quantity"
                     class="form-control" />
        <ValidationMessage For="() => product.Quantity" />
    </div>

    <div class="form-group">
        <label for="quantity">Price</label>
        <InputNumber id="price"
                     @bind-Value="product.Price"
                     class="form-control" />
        <ValidationMessage For="() => product.Price" />
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    &nbsp;
    <a href="/products" class="btn btn-primary">Cancel</a>
</EditForm>

@code {
    private Product product { get; set; } = new();

    private async Task Save()
    {
        await AddProductUseCase.ExecuteAsync(product);

        NavigationManager.NavigateTo("/products");
    }
}
